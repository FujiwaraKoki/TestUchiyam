"""
Django settings for function_project project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
# from xml.dom.minidom import Notation

# # Cloudinaryの設定 #問題や不具合が発生せずに記載出来ております！
# os.environ['CLOUDINARY_URL'] = 'cloudinary://849992194399532:uxavdn8ARiCFCCluRFYB7zXTu0Q@dfo6zpzik'

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')
STATIC_DIR = os.path.join(BASE_DIR, 'static')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-cw&h(&866t*h$ns35@(6ifum4*9fcn%20ibdi0@_1_sp8ne@wi"

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False #Visual Studio Codeで制作している場合はDEBUG = Falseに設定しましょう！
DEBUG = True

# ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '.pythonanywhere.com', 'Portfoliosubmission3.pythonanywhere.com']
ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'fujiwarakoki.pythonanywhere.com', 'uchiyamatakuro.pythonanywhere.com', 'http://127.0.0.1:8000/accounts/user_login/'] #ユーザー名【uchiyamatakuro】

CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
# SECURE_SSL_REDIRECT = True #現段階で問題やも不具合が発生しておりません！
# SECURE_HSTS_SECONDS = 31536000
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_HSTS_PRELOAD = True
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# SECURE_SSL_REDIRECT = False  # SSLリダイレクトが必要ない場合はFalse
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')  # SSLを使用する場合

# import cloudinary
# import cloudinary.uploader
# import cloudinary.api

# cloudinary.config(
#     cloud_name=os.getenv('CLOUDINARY_CLOUD_NAME'),
#     api_key=os.getenv('CLOUDINARY_API_KEY'),
#     api_secret=os.getenv('CLOUDINARY_API_SECRET'),
#     secure=True
# )

# import cloudinary
# import cloudinary.uploader
# import cloudinary.api

# cloudinary.config(
#   cloud_name = 'dfo6zpzik',
#   api_key = '849992194399532',
#   api_secret = 'uxavdn8ARiCFCCluRFYB7zXTu0Q'
# )

# import cloudinary
# import cloudinary.uploader
# import cloudinary.api

# cloudinary.config(
#   cloud_name = 'dfo6zpzik',
#   api_key = '849992194399532',
#   api_secret = 'uxavdn8ARiCFCCluRFYB7zXTu0Q',
#   secure=True  # HTTPSで接続する設定
# )

# cloudinary.config(
#   cloud_name='dfo6zpzik',
#   api_key='849992194399532',
#   api_secret='uxavdn8ARiCFCCluRFYB7zXTu0Q',
#   secure=False  # HTTPで接続する設定
# )

# # Cloudinaryの設定
# CLOUDINARY_URL = 'cloudinary://849992194399532:uxavdn8ARiCFCCluRFYB7zXTu0Q@dfo6zpzik'

from django.core.management.utils import get_random_secret_key
SECRET_KEY = get_random_secret_key()

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'accounts',
    'boards',
    'cloudinary_storage',
    'cloudinary',
] #記載内容のバックアップです！この記載内容に戻りましょう！

# INSTALLED_APPS = [
#     "django.contrib.admin",
#     "django.contrib.auth",
#     "django.contrib.contenttypes",
#     "django.contrib.sessions",
#     "django.contrib.messages",
#     'cloudinary_storage',
#     'django.contrib.staticfiles',
#     'cloudinary',
#     'accounts',
#     'boards',
# ]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "function_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [TEMPLATE_DIR,],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "function_project.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# SQLiteの設定（現在使用中）
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# MySQLの設定（コメントアウトして保留）
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'uchiyamatakuro$default',  # あなたのデータベース名（例：uchiyamatakuro$default）
#         'USER': 'uchiyamatakuro',          # あなたのMySQLユーザー名
#         'PASSWORD': 'Taku05061201',  # あなたのMySQLパスワード
#         'HOST': 'uchiyamatakuro.mysql.pythonanywhere-services.com',  # データベースホストアドレス
#         'PORT': '',  # デフォルトのポートを使用するため、空白のまま
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
]

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # 標準の認証バックエンド
    'accounts.backends.CustomAuthBackend',    # カスタム認証バックエンドのパスを追加する
]

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    STATIC_DIR,
)

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

AUTH_USER_MODEL = 'accounts.Users'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# try:
#     from .local_settings import *
# except:
#     pass

# SECURE_SSL_REDIRECT= False
# SECURE_SSL_REDIRECT = True
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# SECURE = {
#     # ...
#     'SECURE_REDIRECT_EXEMPT': [
#         r'^http://127.0.0.1:8000/',
#     ],
# }

# SECURE_SSL_REDIRECT = False #今後は絶対に記載しません！

# CLOUDINARY_STORAGE = {
#     'CLOUD_NAME': 'dfo6zpzik',
#     'API_KEY': '849992194399532',
#     'API_SECRET': 'uxavdn8ARiCFCCluRFYB7zXTu0Q',
# }
import cloudinary
import cloudinary.uploader
from cloudinary.utils import cloudinary_url
cloudinary.config( 
    cloud_name = "dkmofslt4", 
    api_key = "848774177591921", 
    api_secret = "7rzS_QcLOxamkc6qKR5Ox0_kQvw", # Click 'View API Keys' above to copy your API secret
    api_proxy = 'http://proxy.server:3128',
    secure=True
)
CLOUDINARY_STORAGE = {
    'CLOUD_NAME': 'dkmofslt4',
    'API_KEY': '848774177591921',
    'API_SECRET': '7rzS_QcLOxamkc6qKR5Ox0_kQvw',
    'API_PROXY': 'http://proxy.server:3128'
}

# import requests

# proxies = {
#     "http": "http://proxy.server:3128",
#     "https": "http://proxy.server:3128",
# }

# response = requests.get("https://api.cloudinary.com/v1_1/dfo6zpzik/resources/image", proxies=proxies)
# print(response.status_code)

# os.environ['CLOUDINARY_URL'] = 'cloudinary://849992194399532:uxavdn8ARiCFCCluRFYB7zXTu0Q@dfo6zpzik'

# Cloudinaryの設定
CLOUDINARY_API_PROXY="http://proxy.server:3128"
CLOUDINARY_URL = f'cloudinary://{CLOUDINARY_STORAGE["API_KEY"]}:{CLOUDINARY_STORAGE["API_SECRET"]}@{CLOUDINARY_STORAGE["CLOUD_NAME"]}'

# CLOUDINARY_STORAGE = {
#     'CLOUD_NAME': 'dfo6zpzik',
#     'API_KEY': '849992194399532',
#     'API_SECRET': 'uxavdn8ARiCFCCluRFYB7zXTu0Q',
#     'API_PROXY': 'http://proxy.server:3128',  # プロキシ設定の追加
# } #Visual Studio Codeにおいて、この記載内容で画像を問題や不具合無く取得して表示出来ております！

DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
